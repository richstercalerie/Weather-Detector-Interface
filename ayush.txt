<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AYUSH WEATHER</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat&family=Advent+Pro:400,200&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="style1.css">
  <style>
    /* Add any additional CSS styles here */
  </style>
</head>
<body>

    <div class="widget-parent">
      <div class="weather-icon"></div>
      <div class="widget">
        <div class="clock">
          <div class="min" id="min"></div>
          <div class="hour" id="hour"></div>
        </div>
        <div class="upper">
          <div class="date" id="date">21 March</div>
          <div class="year">Temperature</div>
          <div class="place update" id="temperature">23 &deg;C</div>
        </div>
        <div class="lower">
          <ul class="infos">
            <li class="info temp">
              <h2 class="title">TEMPERATURE</h2>
              <span class='update' id="temp">21 &deg;C</span>
            </li>
            <li class="info weather">
              <h2 class="title">PRESSURE</h2>
              <span class="update" id="pressure">0 mb</span>
            </li>
            <li class="info wind">
              <h2 class="title">RAIN</h2>
              <span class='update' id="rain">0%</span>
            </li>
            <li class="info humidity">
              <h2 class="title">HUMIDITY</h2>
              <span class='update' id="humidity">23%</span>
            </li>
          </ul>
        </div>
      </div>
    </div>

  <script>
    const apiKey = '39abcb48b888339100a6675816731319';
    const weatherIconElement = document.querySelector('.weather-icon');


    async function getWeather() {
      try {
        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Bangalore&appid=${apiKey}&units=metric`);
        const data = await response.json();

        // Update other weather-related information
        document.getElementById("rain").innerHTML = data.rain ? data.rain['1h'] + "%" : "0%";
        document.getElementById("temperature").innerHTML = Math.round(data.main.temp) + "&deg;C";
        document.getElementById("temp").innerHTML = Math.round(data.main.temp) + "&deg;C";
        document.getElementById("humidity").innerHTML = data.main.humidity + "%";
        document.getElementById("pressure").innerHTML = data.main.pressure + " mb";
      } catch (error) {
        console.error(error);
      }
    }
    function drawClock() {
      var now = new Date();
      var hour = now.getHours();
      var minute = now.getMinutes();
      var second = now.getSeconds();
      
      //Date
      var options = {year: 'numeric', month: 'long', day: 'numeric' };
      var today  = new Date();
      document.getElementById("date").innerHTML = today.toLocaleDateString("en-US", options);
      
      //hour
      var hourAngle = (360*(hour/12))+((360/12)*(minute/60));
      var minAngle = 360*(minute/60);
      document.getElementById("hour").style.transform = "rotate("+(hourAngle)+"deg)";
      //minute
      document.getElementById("min").style.transform = "rotate("+(minAngle)+"deg)";
         //Get Humidity Temperature and Rain Data
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
      var txt = this.responseText;
      var obj = JSON.parse(txt); //Ref: https://www.w3schools.com/js/js_json_parse.asp
        document.getElementById("rain").innerHTML = obj.Rain + "%";
        document.getElementById("temperature").innerHTML = Math.round(obj.Temperature) + "&deg;C";
        document.getElementById("temp").innerHTML = Math.round(obj.Temperature) + "&deg;C";
        document.getElementById("humidity").innerHTML = Math.round(obj.Humidity) + "%";
        document.getElementById("pressure").innerHTML = Math.round(obj.Pressuremb) + " mb";
      }  
    };
   xhttp.open("GET", "readADC", true); //Handle readADC server on ESP8266
   xhttp.send();
    }

    setInterval(() => {
      drawClock();
      getWeather();
    }, 2000);
  </script>
</body>
</html>
